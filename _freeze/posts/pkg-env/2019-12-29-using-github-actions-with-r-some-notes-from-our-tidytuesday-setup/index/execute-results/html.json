{
  "hash": "685e319770fd244b2d39da96eb9ec16d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: 'Using GitHub actions with R: Some notes from our #TidyTuesday setup'\nauthor: \n  - name: novica\n    url: \"https://discindo.org/authors/novica\"\ndate: '2019-12-29'\nslug: using-github-actions-with-r-some-notes-from-our-tidytuesday-setup\ncategories:\n  - R\n  - Git\n  - GitHub actions\n  - Rmd\n  - Continuous integration\n---\n\n\n\n\nBeginning in September 2019 we started organizing a #TidyTuesday event \nat the hacklab in Skopje - [KIKA](https://kika.spodeli.org/). It has \nbeen 15 events in 2019, and it's been great. One of the things we wanted \nto do from the outset was to have an online repository of all the code \nand presentations. Both to have a record or activities for ourselves \nand to share our work with other R enthusiasts. The goal was to have a \nGitHub repository to house the code, and then on a separate branch to \nhave the `.Rmd` files used for presentations rendered into \n[html](https://discindo.github.io/TidyTuesdayAtKIKA/) so that they would \nbe browsable on the Internet.\n\nFor the first few events, I did this by hand. I pushed `.Rmd` on the GitHub \nrepository, and a corresponding `html` on a `gh-pages` branch. But this \nfall, GitHub enabled [actions](https://github.com/features/actions) for \nall users, so we thought it would be good to automate the `gh-pages` publishing.\n\nThe idea was good, but we hit some bumps in the implementation.\n\n[Damjan](https://damjan.softver.org.mk/) configured the workflow to run \non Ubuntu latest (18.04). However, Ubuntu doesn't have `CRAN` packages \nby default and installing them from `apt` or from `CRAN` was too slow. \n\nThis made us look in another direction. We found a \n[`tidyverse` Docker container](https://hub.docker.com/r/rocker/tidyverse/) \nthat would solve issues with the installation needed `R` packages. It \nalmost looked like a win, only to see that some of the `.Rmd` files \nload libraries that are not part of the `tidyverse` Docker container. \nAdding more dependencies to the workflow is possible, but dependencies \nhave dependencies and that slows down the process. Currently it takes \nabout 12 minutes to deploy the gh-pages branch. It is possible that this \nwill take longer in the future if the repository grows with new notebooks \nand libraries needed in them.\n\nThe current setup, firstly installs several Ubuntu packages through \nthe [main.yml](https://github.com/discindo/TidyTuesdayAtKIKA/blob/master/.github/workflows/main.yml) configuration.\n\nAfterwards it builds all the `R` packages \n[needed](https://github.com/discindo/TidyTuesdayAtKIKA/blob/master/Rdependencies) \nto render the `Rmd` files. We do this with:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nRscript -e 'install.packages(read.table(\"Rdependencies\", colClasses = \"character\")[,1])'\n```\n:::\n\n\n\n\nAnother thing to be aware of is that the Rmd files must succesfuly render, \notherwise the `CI` will fail. So it is a good practice to check that before \npushing the file to GitHub.\n\nThe GitHub repository has the [code](https://github.com/discindo/TidyTuesdayAtKIKA) \nfrom most, but not all 15 TidyTuesday events at KIKA. Our GitHub actions setup is \nalso maintained in case other `R` users want to try it and perhaps improve it.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}