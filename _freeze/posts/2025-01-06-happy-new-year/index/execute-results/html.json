{
  "hash": "2535ec55cb3b75eb8df01bdfbea967c1",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Happy New Year\nauthor: \n  - name: novica\n    url: \"https://discindo.org/authors/novica\"\ndate: '2025-01-06'\ncategories:\n  - R\ndescription: 'Just a ggplot2 decorated tree.'\nexecute:\n  eval: false\n---\n\n\n\n![Tree](images/tree.png)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\n# Tree branches\ntree_data <- data.frame(\n  x = c(0, -1, 1, 0, -0.8, 0.8, 0, -0.6, 0.6), \n  y = c(0, -1, -1, 0.5, -0.45, -0.45, 1, 0.1, 0.1),\n  group = rep(1:3, each = 3)\n)\n\n# Tree trunk\ntrunk_data <- data.frame(\n  x = c(-0.2, 0.2, 0.2, -0.2),\n  y = c(-1, -1, -1.4, -1.4)\n)\n\n# Star at the top\nstar_data <- data.frame(\n  x = c(0, 0.05, 0.2, 0.08, 0.12, 0, -0.12, -0.08, -0.2, -0.05),\n  y = c(1.35, 1.20, 1.20, 1.1, 0.95, 1.05, 0.95, 1.1, 1.2, 1.2)\n)\n\n# Decorations \ndecorations_data <- data.frame(\n  x = runif(100, -0.8, 0.8),  # Random x positions within the tree\n  y = runif(100, -0.8, 1),    # Random y positions within the tree\n  colors = sample(c(\"red\", \"darkblue\", \"purple\", \"gold\", \"deeppink\"), 100, replace = TRUE)\n)\n\n# Check if a point is inside a triangle\npoint_in_triangle <- function(px, py, x1, y1, x2, y2, x3, y3) {\n  denominator <- ((y2 - y3)*(x1 - x3) + (x3 - x2)*(y1 - y3))\n  a <- ((y2 - y3)*(px - x3) + (x3 - x2)*(py - y3)) / denominator\n  b <- ((y3 - y1)*(px - x3) + (x1 - x3)*(py - y3)) / denominator\n  c <- 1 - a - b\n  return(a >= 0 & b >= 0 & c >= 0)\n}\n\n# Filter decorations to fit in tree triangles\nvalid_points <- apply(decorations_data, 1, function(point) {\n  x <- as.numeric(point['x'])\n  y <- as.numeric(point['y'])\n  inside_triangle1 <- point_in_triangle(x, y, 0, 0, -1, -1, 1, -1)\n  inside_triangle2 <- point_in_triangle(x, y, 0, 0.5, -0.8, -0.45, 0.8, -0.45)\n  inside_triangle3 <- point_in_triangle(x, y, 0, 1, -0.6, 0.1, 0.6, 0.1)\n  return(inside_triangle1 | inside_triangle2 | inside_triangle3)\n})\n\ndecorations_data <- decorations_data[valid_points, ]\n\n# Plot the tree\nggplot() +\n  geom_polygon(data = tree_data, aes(x, y, group = group), fill = \"forestgreen\", color = \"black\") +\n  geom_polygon(data = trunk_data, aes(x, y), fill = \"saddlebrown\", color = \"black\") +\n  geom_polygon(data = star_data, aes(x, y), fill = \"gold\", color = \"black\") +\n  geom_point(data = decorations_data, aes(x, y, color = colors), size = 3) +\n  scale_color_identity() +\n  coord_fixed() +\n  ggtitle(\"ðŸŽ„ Happy New Year!\") +\n  theme_void() +\n  theme(plot.title = element_text(hjust = 0.5)) +\n  theme(legend.position=\"none\") \n```\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}